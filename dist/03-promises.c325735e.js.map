{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SAEpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbL,EAAKY,iBAAiB,UAAWC,IAC/BA,EAAMC,iBACN,MAAMC,EAAaf,EAAKgB,SAASX,MAC3BY,EAAYjB,EAAKgB,SAASE,KAC1BC,EAAcnB,EAAKgB,SAASI,OAC5BC,EAAQC,OAAOP,EAAWQ,OAC1BL,EAAOI,OAAOL,EAAUM,OACxBH,EAASE,OAAOH,EAAYI,OAClC,IAAIC,EAAeH,EAEnB,IAAK,IAAII,EAAI,EAAGA,GAAKL,EAAQK,IAC3BtB,EAAcsB,EAAGD,GACdE,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,SAASC,OAAOC,QAAQ,uBAAqBzB,QAAiBC,MAAU,IAEzEyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBsB,SAASC,OAAOG,QAAQ,sBAAoB3B,QAAeC,MAAU,IAEzEmB,GAAgBN,C","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n  const delayInput = form.elements.delay;\n  const stepInput = form.elements.step;\n  const amountInput = form.elements.amount;\n  const delay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n  let currentDelay = delay;\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.Success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.Failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    currentDelay += step;\n  }\n});"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delayInput","elements","stepInput","step","amountInput","amount","delay1","Number","value","currentDelay","i","then","Notiflix","Notify","Success","catch","Failure"],"version":3,"file":"03-promises.c325735e.js.map"}