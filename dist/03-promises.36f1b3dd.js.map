{"mappings":"YAAA,IAAMA,EAAOC,SAASC,cAAc,SAEpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIPL,EAAKY,iBAAiB,UAAU,SAACC,GAC/BA,EAAMC,iBASN,IARA,IAAMC,EAAaf,EAAKgB,SAASX,MAC3BY,EAAYjB,EAAKgB,SAASE,KAC1BC,EAAcnB,EAAKgB,SAASI,OAC5BC,EAAQC,OAAOP,EAAWQ,OAC1BL,EAAOI,OAAOL,EAAUM,OACxBH,EAASE,OAAOH,EAAYI,OAC9BC,EAAeH,EAEVI,EAAI,EAAGA,GAAKL,EAAQK,IAC3BtB,EAAcsB,EAAGD,GACdE,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,SAASC,OAAOC,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAEvE2B,OAAM,SAAAL,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,SAASC,OAAOI,QAAQ,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAEvEmB,GAAgBN,C","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n  const delayInput = form.elements.delay;\n  const stepInput = form.elements.step;\n  const amountInput = form.elements.amount;\n  const delay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n  let currentDelay = delay;\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.Success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.Failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    currentDelay += step;\n  }\n});"],"names":["$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delayInput","elements","stepInput","step","amountInput","amount","delay1","Number","value","currentDelay","i","then","param","Notiflix","Notify","Success","concat","catch","Failure"],"version":3,"file":"03-promises.36f1b3dd.js.map"}